program MicroCRM;

uses
  Forms,
  Winapi.Windows,
  Dialogs,
  System.UITypes,
  microcrm.views.principal in 'views\microcrm.views.principal.pas' {FormPrincipal},
  microcrm.models.principal in 'models\microcrm.models.principal.pas' {dmPrincipal: TDataModule},
  microcrm.models.reports in 'models\microcrm.models.reports.pas' {dmReports: TDataModule},
  microcrm.utils.resolve_exception in 'utils\microcrm.utils.resolve_exception.pas',
  microcrm.utils.modal_messages in 'utils\microcrm.utils.modal_messages.pas' {FormDialogMessages},
  microcrm.utils.manager_functions in 'utils\microcrm.utils.manager_functions.pas',
  microcrm.views.miscellaneous.starter in 'views\miscellaneous\microcrm.views.miscellaneous.starter.pas' {FormStarter},
  microcrm.views.auth.login in 'views\auth\microcrm.views.auth.login.pas' {FormLogin},
  microcrm.views.miscellaneous.model_list in 'views\miscellaneous\microcrm.views.miscellaneous.model_list.pas' {FormMODELO_LIST},
  microcrm.utils.dialog_await in 'utils\microcrm.utils.dialog_await.pas' {FormDialogAwait},
  microcrm.views.lists.servicos in 'views\lists\microcrm.views.lists.servicos.pas' {FormServicos},
  microcrm.views.lists.usuarios in 'views\lists\microcrm.views.lists.usuarios.pas' {FormUsuarios},
  microcrm.views.lists.clientes in 'views\lists\microcrm.views.lists.clientes.pas' {FormClientes},
  microcrm.views.lists.recibos in 'views\lists\microcrm.views.lists.recibos.pas' {FormRecibos},
  microcrm.views.lists.budgets in 'views\lists\microcrm.views.lists.budgets.pas' {FormOrcamentos},
  microcrm.views.form.newbudget in 'views\form\microcrm.views.form.newbudget.pas' {FormNewBudget},
  microcrm.views.miscellaneous.model_crud in 'views\miscellaneous\microcrm.views.miscellaneous.model_crud.pas' {Form1};

{$R *.res}
var
  MutexHandle: THandle;

begin
  // Tentar criar um mutex com um nome único para o seu aplicativo
  MutexHandle := CreateMutex(nil, True, 'FLEX_CAR_MICRO_CRM');
  // Verificar se já existe uma instância do mutex
  if (MutexHandle <> 0) and (GetLastError = ERROR_ALREADY_EXISTS) then
  begin
    // Se já existe uma instância, encerrar o aplicativo
    CloseHandle(MutexHandle);
    ExitProcess(0); // Encerrar o processo atual
  end;
  ReportMemoryLeaksOnShutdown := True;
  Application.Initialize;
  Application.MainFormOnTaskbar := True;
  Application.Title := 'flexCar - Micro CRM';
  FormStarter := TFormStarter.Create(Application);
  if (FormStarter.ShowModal = mrOk) then
  begin
      FormLogin := TFormLogin.Create(Application);
    if (FormLogin.ShowModal = mrYes) then
    begin
      //apagar os demais
      Application.CreateForm(TFormPrincipal, FormPrincipal);
  Application.CreateForm(TFormNewBudget, FormNewBudget);
  Application.CreateForm(TForm1, Form1);
  Application.Run;

    // Ao finalizar o aplicativo, liberar o mutex
    if MutexHandle <> 0 then
      CloseHandle(MutexHandle);
      end
      else
      begin
      // Ao finalizar o aplicativo, liberar o mutex
      if MutexHandle <> 0 then
        CloseHandle(MutexHandle);
        Application.Terminate;
        ExitProcess(0);
      end;
  end
  else
  begin
    // Ao finalizar o aplicativo, liberar o mutex
    if MutexHandle <> 0 then
      CloseHandle(MutexHandle);
    Application.Terminate;
    ExitProcess(0);
  end;
end.
